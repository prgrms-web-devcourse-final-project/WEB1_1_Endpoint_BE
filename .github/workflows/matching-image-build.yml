name: Matching Image Build

env:
  SERVICE_NAME: matching-service
  BUILD_ID: ${{ github.sha }}-${{ github.run_id }}
  HELM_VALUE: matching-service-chart/values-dev.yaml
  HELM_BRANCH: dev

on:
  push:
    branches:
      - 'develop'
    paths:
      - 'matching-service/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Google Cloud Auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Configure Docker Authentication
        run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev --quiet

      - name: Build, tag, and push docker image to Google Artifact Registry
        env:
          IMAGE_TAG: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.REPO_NAME }}/${{ env.SERVICE_NAME }}:${{ env.BUILD_ID }}
        run: |
          docker build -f ./matching-service/matching-application/app-api/Dockerfile -t $IMAGE_TAG .
          docker push $IMAGE_TAG

      - name: Checkout Helm Repository
        uses: actions/checkout@v4
        with:
          repository: quizy-web/quizy-helm-charts
          path: helm-chart
          ref: ${{ env.HELM_BRANCH }}
          ssh-key: ${{ secrets.HELM_REPO_SSH_KEY }}

      - name: Change Image tag of the Helm Chart
        uses: mikefarah/yq@v4.34.1
        with:
          cmd: yq -i '.image.tag = "${{ env.BUILD_ID }}"' helm-chart/${{ env.HELM_VALUE }}

      - name: Commit and Push Helm Chart Changes
        run: |
          cd helm-chart
          git config --local user.email "githubaction@gmail.com"
          git config --local user.name "githubaction"
          git pull origin ${{ env.HELM_BRANCH }}

          for i in {1..5}; do
            git add ${{ env.HELM_VALUE }}
            git commit -m "Update ${SERVICE_NAME} image tag to ${{ env.BUILD_ID }}"

            if git push origin ${{ env.HELM_BRANCH }}; then
              echo "Successfully pushed changes"
              break
            else
              echo "Push failed, attempt $i of 5"
              if [ $i -lt 5 ]; then
                git pull --rebase origin ${{ env.HELM_BRANCH }}
                sleep $((RANDOM % 5))  # 랜덤 지연 추가
              else
                echo "Failed to push after 5 attempts"
                exit 1
              fi
            fi
          done
