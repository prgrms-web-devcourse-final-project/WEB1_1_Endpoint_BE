kafka:
  topic:
    quiz-outbox: outbox.event.UserInterestsInitializedEvent
  consumer-group:
    matching: matching
    quiz-outbox: quiz-outbox
---
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:mysql://localhost:3306/${DATABASE_NAME}?useSSL=false&allowPublicKeyRetrieval=true
    username: ${DATABASE_USER}
    password: ${DATABASE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show-sql: true
        format_sql: true
    open-in-view: false

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: TRACE
    com.zaxxer.hikari: DEBUG          # HikariCP 커넥션 풀 로그
    org.springframework.jdbc.datasource: TRACE # 데이터소스 관련 로그
    org.springframework.transaction: TRACE     # 트랜잭션 시작/종료 관련 로그

redis:
  host: localhost
  port: 6379

feign:
  client:
    url:
      game-service: http://localhost:8081

kafka-config:
  bootstrap-servers: localhost:19092, localhost:29092, localhost:39092
  num-of-partitions: 3
  replication-factor: 3

kafka-producer-config:
  key-serializer-class: org.springframework.kafka.support.serializer.JsonSerializer
  value-serializer-class: org.springframework.kafka.support.serializer.JsonSerializer
  compression-type: none
  acks: all
  batch-size: 16384
  batch-size-boost-factor: 100
  linger-ms: 5
  request-timeout-ms: 60000
  retry-count: 5

kafka-consumer-config:
  key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
  auto-offset-reset: earliest
  batch-listener: true
  auto-startup: true
  concurrency-level: 3
  session-timeout-ms: 10000
  heartbeat-interval-ms: 3000
  max-poll-interval-ms: 300000
  max-poll-records: 500
  max-partition-fetch-bytes-default: 1048576
  max-partition-fetch-bytes-boost-factor: 1
  poll-timeout-ms: 150
  type-mappings:
    - OutboxEvent:com.grepp.quizy.matching.infra.user.messaging.listener.Event
  ack-mode: MANUAL

---

spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:mysql://${DATABASE_HOST}:3306/${DATABASE_NAME}?useSSL=false&allowPublicKeyRetrieval=true
    username: ${DATABASE_USER}
    password: ${DATABASE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO}
    properties:
      hibernate:
        show-sql: false
        format_sql: false
    open-in-view: false

redis:
  host: ${REDIS_HOST}
  port: 6379

feign:
  client:
    url:
      game-service: http://dev-game-service:8080

kafka-config:
  bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
  num-of-partitions: 3
  replication-factor: 3

kafka-producer-config:
  key-serializer-class: org.springframework.kafka.support.serializer.JsonSerializer
  value-serializer-class: org.springframework.kafka.support.serializer.JsonSerializer
  compression-type: none
  acks: all
  batch-size: 16384
  batch-size-boost-factor: 100
  linger-ms: 5
  request-timeout-ms: 60000
  retry-count: 5

kafka-consumer-config:
  key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
  auto-offset-reset: earliest
  batch-listener: true
  auto-startup: true
  concurrency-level: 3
  session-timeout-ms: 10000
  heartbeat-interval-ms: 3000
  max-poll-interval-ms: 300000
  max-poll-records: 500
  max-partition-fetch-bytes-default: 1048576
  max-partition-fetch-bytes-boost-factor: 1
  poll-timeout-ms: 150
  type-mappings:
    - OutboxEvent:com.grepp.quizy.matching.infra.user.messaging.listener.Event
  ack-mode: MANUAL