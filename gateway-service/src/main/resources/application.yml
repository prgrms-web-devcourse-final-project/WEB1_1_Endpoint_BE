server:
  shutdown: graceful
management:
  endpoints:
    web:
      exposure:
        include: health, info
springdoc:
  swagger-ui:
    use-root-path: true
spring:
  main:
    web-application-type: reactive
  cloud:
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins:
              - "http://localhost:3000"
              - "http://localhost:5173"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - PATCH
              - OPTIONS
            allowedHeaders:
              #              - "Access-Control-Allow-Headers"
              #              - "Access-Control-Allow-Origin"
              #              - "Access-Control-Request-Method"
              #              - "Access-Control-Request-Headers"
              #              - "Origin"
              #              - "Cache-Control"
              #              - "Content-Type"
              #              - "Authorization"
              #              - "X-Requested-With"
              #              - "credentials"
              #              - "If-None-Match"
              #              - "Accept"
              #              - "Upgrade"
              #              - "Connection"
              - "*"
            allowCredentials: true

---
spring:
  config:
    activate:
      on-profile: local
  cloud:
    gateway:
      routes:
        - id: game
          uri: http://localhost:8081
          predicates:
            - Path=/api/game/**, /ws/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
                key-resolver: "#{@userKeyResolver}"

        - id: matching
          uri: http://localhost:8082
          predicates:
            - Path=/api/matching/**
          metadata:
            response-timeout: 300000
            connect-timeout: 300000
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
                key-resolver: "#{@userKeyResolver}"

        - id: quiz
          uri: http://localhost:8083
          predicates:
            - Path=/api/quiz/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
                key-resolver: "#{@userKeyResolver}"

        - id: user
          uri: http://localhost:8085
          predicates:
            - Path=/api/user/**, /oauth2/**, /api/auth/**, /login/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
                key-resolver: "#{@userKeyResolver}"

  data:
    redis:
      host: localhost
      port: 6379

springdoc:
  swagger-ui:
    urls[0]:
      name: Game API
      url: http://localhost:8080/api/game/api-docs
    urls[1]:
      name: Quiz API
      url: http://localhost:8080/api/quiz/api-docs
    urls[2]:
      name: Matching API
      url: http://localhost:8080/api/matching/api-docs
    urls[3]:
      name: User API
      url: http://localhost:8080/api/user/api-docs

jwt:
  secret: ${JWT_SECRET}
  access-token-validity: 3600000  # 1시간
  refresh-token-validity: 604800000  # 7일

service:
  user:
    url: http://localhost:8085


#logging:
#  level:
#    org:
#      springframework:
#        DEBUG
---
spring:
  config:
    activate:
      on-profile: dev
  cloud:
    gateway:
      routes:
        - id: game
          uri: http://dev-game-service:8080
          predicates:
            - Path=/api/game/**, /ws/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
                key-resolver: "#{@userKeyResolver}"

        - id: matching
          uri: http://dev-matching-service:8080
          predicates:
            - Path=/api/matching/**
          metadata:
            response-timeout: 300000
            connect-timeout: 300000
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
                key-resolver: "#{@userKeyResolver}"

        - id: quiz
          uri: http://dev-quiz-service:8080
          predicates:
            - Path=/api/quiz/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
                key-resolver: "#{@userKeyResolver}"

        - id: user
          uri: http://dev-user-service:8080
          predicates:
            - Path=/api/user/**, /oauth2/**, /api/auth/**, /login/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
                key-resolver: "#{@userKeyResolver}"

    kubernetes:
      discovery:
        enabled: true
        all-namespaces: true
        primary-port-name: http


  data:
    redis:
      host: ${REDIS_HOST}
      port: 6379

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
#    root: DEBUG

springdoc:
  swagger-ui:
    urls[0]:
      name: Game API
      url: /api/game/api-docs
    urls[1]:
      name: Quiz API
      url: /api/quiz/api-docs
    urls[2]:
      name: Matching API
      url: /api/matching/api-docs
    urls[3]:
      name: User API
      url: /api/user/api-docs

service:
  user:
    url: http://dev-user-service:8080

jwt:
  secret: ${JWT_SECRET}
  access-token-validity: 3600000  # 1시간
  refresh-token-validity: 604800000  # 7일

